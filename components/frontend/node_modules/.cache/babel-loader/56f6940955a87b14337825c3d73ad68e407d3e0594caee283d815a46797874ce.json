{"ast":null,"code":"var bytesToUuid = require('./bytesToUuid');\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  var bytes = new Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\nmodule.exports = function (name, version, hashfunc) {\n  var generateUUID = function (value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n    return buf || bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {}\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n  return generateUUID;\n};","map":{"version":3,"names":["bytesToUuid","require","uuidToBytes","uuid","bytes","replace","hex","push","parseInt","stringToBytes","str","unescape","encodeURIComponent","Array","length","i","charCodeAt","module","exports","name","version","hashfunc","generateUUID","value","namespace","buf","offset","off","isArray","TypeError","concat","idx","err","DNS","URL"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/uuid/lib/v35.js"],"sourcesContent":["var bytesToUuid = require('./bytesToUuid');\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function(hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  var bytes = new Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\n\nmodule.exports = function(name, version, hashfunc) {\n  var generateUUID = function(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n\n    if (typeof(value) == 'string') value = stringToBytes(value);\n    if (typeof(namespace) == 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off+idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n\n  return generateUUID;\n};\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,SAASC,WAAWA,CAACC,IAAI,EAAE;EACzB;EACA,IAAIC,KAAK,GAAG,EAAE;EACdD,IAAI,CAACE,OAAO,CAAC,iBAAiB,EAAE,UAASC,GAAG,EAAE;IAC5CF,KAAK,CAACG,IAAI,CAACC,QAAQ,CAACF,GAAG,EAAE,EAAE,CAAC,CAAC;EAC/B,CAAC,CAAC;EAEF,OAAOF,KAAK;AACd;AAEA,SAASK,aAAaA,CAACC,GAAG,EAAE;EAC1BA,GAAG,GAAGC,QAAQ,CAACC,kBAAkB,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,IAAIN,KAAK,GAAG,IAAIS,KAAK,CAACH,GAAG,CAACI,MAAM,CAAC;EACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;IACnCX,KAAK,CAACW,CAAC,CAAC,GAAGL,GAAG,CAACM,UAAU,CAACD,CAAC,CAAC;EAC9B;EACA,OAAOX,KAAK;AACd;AAEAa,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACjD,IAAIC,YAAY,GAAG,SAAAA,CAASC,KAAK,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAE;IACzD,IAAIC,GAAG,GAAGF,GAAG,IAAIC,MAAM,IAAI,CAAC;IAE5B,IAAI,OAAOH,KAAM,IAAI,QAAQ,EAAEA,KAAK,GAAGd,aAAa,CAACc,KAAK,CAAC;IAC3D,IAAI,OAAOC,SAAU,IAAI,QAAQ,EAAEA,SAAS,GAAGtB,WAAW,CAACsB,SAAS,CAAC;IAErE,IAAI,CAACX,KAAK,CAACe,OAAO,CAACL,KAAK,CAAC,EAAE,MAAMM,SAAS,CAAC,iCAAiC,CAAC;IAC7E,IAAI,CAAChB,KAAK,CAACe,OAAO,CAACJ,SAAS,CAAC,IAAIA,SAAS,CAACV,MAAM,KAAK,EAAE,EAAE,MAAMe,SAAS,CAAC,6DAA6D,CAAC;;IAExI;IACA,IAAIzB,KAAK,GAAGiB,QAAQ,CAACG,SAAS,CAACM,MAAM,CAACP,KAAK,CAAC,CAAC;IAC7CnB,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAIgB,OAAO;IACtChB,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;IAEnC,IAAIqB,GAAG,EAAE;MACP,KAAK,IAAIM,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAE,EAAEA,GAAG,EAAE;QACjCN,GAAG,CAACE,GAAG,GAACI,GAAG,CAAC,GAAG3B,KAAK,CAAC2B,GAAG,CAAC;MAC3B;IACF;IAEA,OAAON,GAAG,IAAIzB,WAAW,CAACI,KAAK,CAAC;EAClC,CAAC;;EAED;EACA,IAAI;IACFkB,YAAY,CAACH,IAAI,GAAGA,IAAI;EAC1B,CAAC,CAAC,OAAOa,GAAG,EAAE,CACd;;EAEA;EACAV,YAAY,CAACW,GAAG,GAAG,sCAAsC;EACzDX,YAAY,CAACY,GAAG,GAAG,sCAAsC;EAEzD,OAAOZ,YAAY;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}