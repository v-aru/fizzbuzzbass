{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar Limes = require('limes'),\n  uuid = require('uuidv4'),\n  WebSocket = require('ws');\nvar v1 = require('./v1/wsIndex');\nvar wsServer = function wsServer(_ref) {\n  var app = _ref.app,\n    httpServer = _ref.httpServer,\n    readModel = _ref.readModel,\n    writeModel = _ref.writeModel;\n  if (!app) {\n    throw new Error('App is missing.');\n  }\n  if (!httpServer) {\n    throw new Error('Http server is missing.');\n  }\n  if (!readModel) {\n    throw new Error('Read model is missing.');\n  }\n  if (!writeModel) {\n    throw new Error('Write model is missing.');\n  }\n  var logger = app.services.getLogger();\n  var webSocketServer = new WebSocket.Server({\n    server: httpServer\n  });\n  var limes = new Limes({\n    identityProviders: app.identityProviders\n  });\n  webSocketServer.on('connection', function (socket) {\n    // Currently, sockets do not have a unique identifier. That's why we make up\n    // our own here. To avoid overwriting a future uniqueId property we have an\n    // additional sanity check here.\n    if (socket.uniqueId) {\n      throw new Error('Sockets now have a uniqueId property by default.');\n    }\n    socket.uniqueId = uuid();\n    var onMessage = /*#__PURE__*/\n    function () {\n      var _ref2 = (0, _asyncToGenerator2.default)(/*#__PURE__*/\n      _regenerator.default.mark(function _callee(data) {\n        var message, api, decodedToken;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                message = JSON.parse(data);\n                _context.next = 15;\n                break;\n              case 4:\n                _context.prev = 4;\n                _context.t0 = _context[\"catch\"](0);\n                _context.prev = 6;\n                _context.next = 9;\n                return v1.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Bad request.'\n                });\n              case 9:\n                _context.next = 14;\n                break;\n              case 11:\n                _context.prev = 11;\n                _context.t1 = _context[\"catch\"](6);\n                logger.error('Failed to send message.', {\n                  exSendMessage: _context.t1\n                });\n              case 14:\n                return _context.abrupt(\"return\");\n              case 15:\n                _context.t2 = message.version;\n                _context.next = _context.t2 === 'v1' ? 18 : 20;\n                break;\n              case 18:\n                api = v1;\n                return _context.abrupt(\"break\", 29);\n              case 20:\n                _context.prev = 20;\n                _context.next = 23;\n                return v1.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Bad request.'\n                });\n              case 23:\n                _context.next = 28;\n                break;\n              case 25:\n                _context.prev = 25;\n                _context.t3 = _context[\"catch\"](20);\n                logger.error('Failed to send message.', {\n                  ex: _context.t3\n                });\n              case 28:\n                return _context.abrupt(\"return\");\n              case 29:\n                if (message.procedureId) {\n                  _context.next = 39;\n                  break;\n                }\n                _context.prev = 30;\n                _context.next = 33;\n                return api.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Procedure id is missing.'\n                });\n              case 33:\n                _context.next = 38;\n                break;\n              case 35:\n                _context.prev = 35;\n                _context.t4 = _context[\"catch\"](30);\n                logger.error('Failed to send message.', {\n                  ex: _context.t4\n                });\n              case 38:\n                return _context.abrupt(\"return\");\n              case 39:\n                if (uuid.is(message.procedureId)) {\n                  _context.next = 49;\n                  break;\n                }\n                _context.prev = 40;\n                _context.next = 43;\n                return api.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Procedure id is invalid.'\n                });\n              case 43:\n                _context.next = 48;\n                break;\n              case 45:\n                _context.prev = 45;\n                _context.t5 = _context[\"catch\"](40);\n                logger.error('Failed to send message.', {\n                  ex: _context.t5\n                });\n              case 48:\n                return _context.abrupt(\"return\");\n              case 49:\n                if (message.token) {\n                  _context.next = 55;\n                  break;\n                }\n                message.token = Limes.issueUntrustedTokenAsJson({\n                  // According to RFC 2606, .invalid is a reserved TLD you can use in\n                  // cases where you want to show that a domain is invalid. Since the\n                  // tokens issued for anonymous users are made-up, https://token.invalid\n                  // makes up a valid url, but we are sure that we do not run into any\n                  // conflicts with the domain.\n                  issuer: 'https://token.invalid',\n                  subject: 'anonymous'\n                });\n                _context.next = 53;\n                return api.handleMessage(socket, {\n                  app: app,\n                  message: message,\n                  readModel: readModel,\n                  writeModel: writeModel\n                });\n              case 53:\n                _context.next = 75;\n                break;\n              case 55:\n                _context.prev = 55;\n                _context.next = 58;\n                return limes.verifyToken({\n                  token: message.token\n                });\n              case 58:\n                decodedToken = _context.sent;\n                _context.next = 72;\n                break;\n              case 61:\n                _context.prev = 61;\n                _context.t6 = _context[\"catch\"](55);\n                _context.prev = 63;\n                _context.next = 66;\n                return api.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 401,\n                  payload: 'Invalid token.',\n                  procedureId: message.procedureId\n                });\n              case 66:\n                _context.next = 71;\n                break;\n              case 68:\n                _context.prev = 68;\n                _context.t7 = _context[\"catch\"](63);\n                logger.error('Failed to send message.', {\n                  exSendMessage: _context.t7\n                });\n              case 71:\n                return _context.abrupt(\"return\");\n              case 72:\n                message.token = decodedToken;\n                _context.next = 75;\n                return api.handleMessage(socket, {\n                  app: app,\n                  message: message,\n                  readModel: readModel,\n                  writeModel: writeModel\n                });\n              case 75:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 4], [6, 11], [20, 25], [30, 35], [40, 45], [55, 61], [63, 68]]);\n      }));\n      return function onMessage(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var onClose = function onClose() {\n      v1.postEvents.removeAllListenersFor(socket);\n      v1.postRead.removeAllListenersFor(socket);\n      socket.removeEventListener('message', onMessage);\n      socket.removeEventListener('close', onClose);\n    };\n    socket.on('close', onClose);\n    socket.on('message', onMessage);\n  });\n};\nmodule.exports = wsServer;","map":{"version":3,"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","Limes","uuid","WebSocket","v1","wsServer","_ref","app","httpServer","readModel","writeModel","Error","logger","services","getLogger","webSocketServer","Server","server","limes","identityProviders","on","socket","uniqueId","onMessage","_ref2","default","mark","_callee","data","message","api","decodedToken","wrap","_callee$","_context","prev","next","JSON","parse","t0","sendMessage","type","statusCode","payload","t1","error","exSendMessage","abrupt","t2","version","t3","ex","procedureId","t4","is","t5","token","issueUntrustedTokenAsJson","issuer","subject","handleMessage","verifyToken","sent","t6","t7","stop","_x","apply","arguments","onClose","postEvents","removeAllListenersFor","postRead","removeEventListener","module","exports"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/tailwind/dist/wires/api/http/wsServer.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar Limes = require('limes'),\n    uuid = require('uuidv4'),\n    WebSocket = require('ws');\n\nvar v1 = require('./v1/wsIndex');\n\nvar wsServer = function wsServer(_ref) {\n  var app = _ref.app,\n      httpServer = _ref.httpServer,\n      readModel = _ref.readModel,\n      writeModel = _ref.writeModel;\n\n  if (!app) {\n    throw new Error('App is missing.');\n  }\n\n  if (!httpServer) {\n    throw new Error('Http server is missing.');\n  }\n\n  if (!readModel) {\n    throw new Error('Read model is missing.');\n  }\n\n  if (!writeModel) {\n    throw new Error('Write model is missing.');\n  }\n\n  var logger = app.services.getLogger();\n  var webSocketServer = new WebSocket.Server({\n    server: httpServer\n  });\n  var limes = new Limes({\n    identityProviders: app.identityProviders\n  });\n  webSocketServer.on('connection', function (socket) {\n    // Currently, sockets do not have a unique identifier. That's why we make up\n    // our own here. To avoid overwriting a future uniqueId property we have an\n    // additional sanity check here.\n    if (socket.uniqueId) {\n      throw new Error('Sockets now have a uniqueId property by default.');\n    }\n\n    socket.uniqueId = uuid();\n\n    var onMessage =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(data) {\n        var message, api, decodedToken;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                message = JSON.parse(data);\n                _context.next = 15;\n                break;\n\n              case 4:\n                _context.prev = 4;\n                _context.t0 = _context[\"catch\"](0);\n                _context.prev = 6;\n                _context.next = 9;\n                return v1.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Bad request.'\n                });\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t1 = _context[\"catch\"](6);\n                logger.error('Failed to send message.', {\n                  exSendMessage: _context.t1\n                });\n\n              case 14:\n                return _context.abrupt(\"return\");\n\n              case 15:\n                _context.t2 = message.version;\n                _context.next = _context.t2 === 'v1' ? 18 : 20;\n                break;\n\n              case 18:\n                api = v1;\n                return _context.abrupt(\"break\", 29);\n\n              case 20:\n                _context.prev = 20;\n                _context.next = 23;\n                return v1.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Bad request.'\n                });\n\n              case 23:\n                _context.next = 28;\n                break;\n\n              case 25:\n                _context.prev = 25;\n                _context.t3 = _context[\"catch\"](20);\n                logger.error('Failed to send message.', {\n                  ex: _context.t3\n                });\n\n              case 28:\n                return _context.abrupt(\"return\");\n\n              case 29:\n                if (message.procedureId) {\n                  _context.next = 39;\n                  break;\n                }\n\n                _context.prev = 30;\n                _context.next = 33;\n                return api.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Procedure id is missing.'\n                });\n\n              case 33:\n                _context.next = 38;\n                break;\n\n              case 35:\n                _context.prev = 35;\n                _context.t4 = _context[\"catch\"](30);\n                logger.error('Failed to send message.', {\n                  ex: _context.t4\n                });\n\n              case 38:\n                return _context.abrupt(\"return\");\n\n              case 39:\n                if (uuid.is(message.procedureId)) {\n                  _context.next = 49;\n                  break;\n                }\n\n                _context.prev = 40;\n                _context.next = 43;\n                return api.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 400,\n                  payload: 'Procedure id is invalid.'\n                });\n\n              case 43:\n                _context.next = 48;\n                break;\n\n              case 45:\n                _context.prev = 45;\n                _context.t5 = _context[\"catch\"](40);\n                logger.error('Failed to send message.', {\n                  ex: _context.t5\n                });\n\n              case 48:\n                return _context.abrupt(\"return\");\n\n              case 49:\n                if (message.token) {\n                  _context.next = 55;\n                  break;\n                }\n\n                message.token = Limes.issueUntrustedTokenAsJson({\n                  // According to RFC 2606, .invalid is a reserved TLD you can use in\n                  // cases where you want to show that a domain is invalid. Since the\n                  // tokens issued for anonymous users are made-up, https://token.invalid\n                  // makes up a valid url, but we are sure that we do not run into any\n                  // conflicts with the domain.\n                  issuer: 'https://token.invalid',\n                  subject: 'anonymous'\n                });\n                _context.next = 53;\n                return api.handleMessage(socket, {\n                  app: app,\n                  message: message,\n                  readModel: readModel,\n                  writeModel: writeModel\n                });\n\n              case 53:\n                _context.next = 75;\n                break;\n\n              case 55:\n                _context.prev = 55;\n                _context.next = 58;\n                return limes.verifyToken({\n                  token: message.token\n                });\n\n              case 58:\n                decodedToken = _context.sent;\n                _context.next = 72;\n                break;\n\n              case 61:\n                _context.prev = 61;\n                _context.t6 = _context[\"catch\"](55);\n                _context.prev = 63;\n                _context.next = 66;\n                return api.sendMessage(socket, {\n                  type: 'error',\n                  statusCode: 401,\n                  payload: 'Invalid token.',\n                  procedureId: message.procedureId\n                });\n\n              case 66:\n                _context.next = 71;\n                break;\n\n              case 68:\n                _context.prev = 68;\n                _context.t7 = _context[\"catch\"](63);\n                logger.error('Failed to send message.', {\n                  exSendMessage: _context.t7\n                });\n\n              case 71:\n                return _context.abrupt(\"return\");\n\n              case 72:\n                message.token = decodedToken;\n                _context.next = 75;\n                return api.handleMessage(socket, {\n                  app: app,\n                  message: message,\n                  readModel: readModel,\n                  writeModel: writeModel\n                });\n\n              case 75:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 4], [6, 11], [20, 25], [30, 35], [40, 45], [55, 61], [63, 68]]);\n      }));\n\n      return function onMessage(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var onClose = function onClose() {\n      v1.postEvents.removeAllListenersFor(socket);\n      v1.postRead.removeAllListenersFor(socket);\n      socket.removeEventListener('message', onMessage);\n      socket.removeEventListener('close', onClose);\n    };\n\n    socket.on('close', onClose);\n    socket.on('message', onMessage);\n  });\n};\n\nmodule.exports = wsServer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}