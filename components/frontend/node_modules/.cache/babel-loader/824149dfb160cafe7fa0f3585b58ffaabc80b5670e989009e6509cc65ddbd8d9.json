{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar sendMessage = require('./wsSendMessage'),\n  validateQuery = require('./validateQuery');\nvar subscriptions = {};\nvar postRead = {\n  subscribe: function () {\n    var _subscribe = (0, _asyncToGenerator2.default)(/*#__PURE__*/\n    _regenerator.default.mark(function _callee4(socket, _ref) {\n      var app, message, readModel, logger, _message$payload, modelName, modelType, _message$payload$quer, query, _query$orderBy, orderBy, _query$skip, skip, _query$take, take, _query$where, where, authenticationWhere, stream, onData, onEnd, onError, unsubscribe;\n      return _regenerator.default.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              app = _ref.app, message = _ref.message, readModel = _ref.readModel;\n              if (socket) {\n                _context4.next = 3;\n                break;\n              }\n              throw new Error('Socket is missing.');\n            case 3:\n              if (app) {\n                _context4.next = 5;\n                break;\n              }\n              throw new Error('App is missing.');\n            case 5:\n              if (message) {\n                _context4.next = 7;\n                break;\n              }\n              throw new Error('Message is missing.');\n            case 7:\n              if (readModel) {\n                _context4.next = 9;\n                break;\n              }\n              throw new Error('Read model is missing.');\n            case 9:\n              logger = app.services.getLogger();\n              if (message.payload) {\n                _context4.next = 20;\n                break;\n              }\n              _context4.prev = 11;\n              _context4.next = 14;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Payload is missing.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n            case 14:\n              _context4.next = 19;\n              break;\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](11);\n              logger.error('Failed to send message.', {\n                ex: _context4.t0\n              });\n            case 19:\n              return _context4.abrupt(\"return\");\n            case 20:\n              _message$payload = message.payload, modelName = _message$payload.modelName, modelType = _message$payload.modelType, _message$payload$quer = _message$payload.query, query = _message$payload$quer === void 0 ? {} : _message$payload$quer;\n              _query$orderBy = query.orderBy, orderBy = _query$orderBy === void 0 ? {} : _query$orderBy;\n              _query$skip = query.skip, skip = _query$skip === void 0 ? 0 : _query$skip, _query$take = query.take, take = _query$take === void 0 ? 100 : _query$take, _query$where = query.where, where = _query$where === void 0 ? {} : _query$where;\n              if (typeof skip !== 'number') {\n                skip = 0;\n              }\n              if (typeof take !== 'number') {\n                take = 100;\n              }\n              if (readModel[modelType]) {\n                _context4.next = 35;\n                break;\n              }\n              _context4.prev = 26;\n              _context4.next = 29;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Unknown model type.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n            case 29:\n              _context4.next = 34;\n              break;\n            case 31:\n              _context4.prev = 31;\n              _context4.t1 = _context4[\"catch\"](26);\n              logger.error('Failed to send message.', {\n                ex: _context4.t1\n              });\n            case 34:\n              return _context4.abrupt(\"return\");\n            case 35:\n              if (readModel[modelType][modelName]) {\n                _context4.next = 45;\n                break;\n              }\n              _context4.prev = 36;\n              _context4.next = 39;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Unknown model name.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n            case 39:\n              _context4.next = 44;\n              break;\n            case 41:\n              _context4.prev = 41;\n              _context4.t2 = _context4[\"catch\"](36);\n              logger.error('Failed to send message.', {\n                ex: _context4.t2\n              });\n            case 44:\n              return _context4.abrupt(\"return\");\n            case 45:\n              _context4.prev = 45;\n              validateQuery({\n                orderBy: orderBy,\n                skip: skip,\n                take: take,\n                where: where\n              });\n              _context4.next = 60;\n              break;\n            case 49:\n              _context4.prev = 49;\n              _context4.t3 = _context4[\"catch\"](45);\n              _context4.prev = 51;\n              _context4.next = 54;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Invalid query.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n            case 54:\n              _context4.next = 59;\n              break;\n            case 56:\n              _context4.prev = 56;\n              _context4.t4 = _context4[\"catch\"](51);\n              logger.error('Failed to send message.', {\n                exSendMessage: _context4.t4\n              });\n            case 59:\n              return _context4.abrupt(\"return\");\n            case 60:\n              authenticationWhere = [{\n                'isAuthorized.owner': message.token.sub\n              }, {\n                'isAuthorized.forPublic': true\n              }];\n              if (message.token.sub !== 'anonymous') {\n                authenticationWhere.push({\n                  'isAuthorized.forAuthenticated': true\n                });\n              }\n              where = {\n                $and: [where, {\n                  $or: authenticationWhere\n                }]\n              };\n              _context4.prev = 63;\n              _context4.next = 66;\n              return app.api.read(modelType, modelName, {\n                where: where,\n                orderBy: orderBy,\n                take: take,\n                skip: skip,\n                user: {\n                  id: message.token.sub,\n                  token: message.token\n                }\n              });\n            case 66:\n              stream = _context4.sent;\n              _context4.next = 80;\n              break;\n            case 69:\n              _context4.prev = 69;\n              _context4.t5 = _context4[\"catch\"](63);\n              _context4.prev = 71;\n              _context4.next = 74;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Unable to load model.',\n                statusCode: 500,\n                procedureId: message.procedureId\n              });\n            case 74:\n              _context4.next = 79;\n              break;\n            case 76:\n              _context4.prev = 76;\n              _context4.t6 = _context4[\"catch\"](71);\n              logger.error('Failed to send message.', {\n                exSendMessage: _context4.t6\n              });\n            case 79:\n              return _context4.abrupt(\"return\");\n            case 80:\n              unsubscribe = function unsubscribe() {\n                stream.removeListener('data', onData);\n                stream.removeListener('end', onEnd);\n                stream.removeListener('error', onError);\n                stream.end();\n              };\n              subscriptions[socket.uniqueId] = subscriptions[socket.uniqueId] || {};\n              subscriptions[socket.uniqueId][message.procedureId] = unsubscribe;\n              onData = function onData(data) {\n                (0, _asyncToGenerator2.default)(/*#__PURE__*/\n                _regenerator.default.mark(function _callee() {\n                  return _regenerator.default.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.prev = 0;\n                          _context.next = 3;\n                          return sendMessage(socket, {\n                            type: 'item',\n                            payload: data,\n                            statusCode: 200,\n                            procedureId: message.procedureId\n                          });\n                        case 3:\n                          _context.next = 8;\n                          break;\n                        case 5:\n                          _context.prev = 5;\n                          _context.t0 = _context[\"catch\"](0);\n                          logger.error('Failed to send message.', {\n                            ex: _context.t0\n                          });\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[0, 5]]);\n                }))();\n              };\n              onEnd = function onEnd() {\n                unsubscribe();\n                (0, _asyncToGenerator2.default)(/*#__PURE__*/\n                _regenerator.default.mark(function _callee2() {\n                  return _regenerator.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.prev = 0;\n                          _context2.next = 3;\n                          return sendMessage(socket, {\n                            type: 'finish',\n                            statusCode: 200,\n                            procedureId: message.procedureId\n                          });\n                        case 3:\n                          _context2.next = 8;\n                          break;\n                        case 5:\n                          _context2.prev = 5;\n                          _context2.t0 = _context2[\"catch\"](0);\n                          logger.error('Failed to send message.', {\n                            ex: _context2.t0\n                          });\n                        case 8:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[0, 5]]);\n                }))();\n              };\n              onError = function onError(err) {\n                unsubscribe();\n                (0, _asyncToGenerator2.default)(/*#__PURE__*/\n                _regenerator.default.mark(function _callee3() {\n                  return _regenerator.default.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.prev = 0;\n                          _context3.next = 3;\n                          return sendMessage(socket, {\n                            type: 'error',\n                            statusCode: 500,\n                            procedureId: message.procedureId,\n                            payload: err\n                          });\n                        case 3:\n                          _context3.next = 8;\n                          break;\n                        case 5:\n                          _context3.prev = 5;\n                          _context3.t0 = _context3[\"catch\"](0);\n                          logger.error('Failed to send message.', {\n                            ex: _context3.t0\n                          });\n                        case 8:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[0, 5]]);\n                }))();\n              };\n              stream.on('data', onData);\n              stream.on('end', onEnd);\n              stream.on('error', onError);\n              _context4.prev = 89;\n              _context4.next = 92;\n              return sendMessage(socket, {\n                type: 'subscribedRead',\n                statusCode: 200,\n                procedureId: message.procedureId\n              });\n            case 92:\n              _context4.next = 97;\n              break;\n            case 94:\n              _context4.prev = 94;\n              _context4.t7 = _context4[\"catch\"](89);\n              logger.error('Failed to send message.', {\n                ex: _context4.t7\n              });\n            case 97:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[11, 16], [26, 31], [36, 41], [45, 49], [51, 56], [63, 69], [71, 76], [89, 94]]);\n    }));\n    function subscribe(_x, _x2) {\n      return _subscribe.apply(this, arguments);\n    }\n    return subscribe;\n  }(),\n  unsubscribe: function () {\n    var _unsubscribe = (0, _asyncToGenerator2.default)(/*#__PURE__*/\n    _regenerator.default.mark(function _callee5(socket, _ref5) {\n      var app, message, logger, unsubscribe;\n      return _regenerator.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              app = _ref5.app, message = _ref5.message;\n              if (socket) {\n                _context5.next = 3;\n                break;\n              }\n              throw new Error('Socket is missing.');\n            case 3:\n              if (app) {\n                _context5.next = 5;\n                break;\n              }\n              throw new Error('App is missing.');\n            case 5:\n              if (message) {\n                _context5.next = 7;\n                break;\n              }\n              throw new Error('Message is missing.');\n            case 7:\n              logger = app.services.getLogger();\n              if (!(!subscriptions[socket.uniqueId] || !subscriptions[socket.uniqueId][message.procedureId])) {\n                _context5.next = 10;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 10:\n              unsubscribe = subscriptions[socket.uniqueId][message.procedureId];\n              unsubscribe();\n              _context5.prev = 12;\n              _context5.next = 15;\n              return sendMessage(socket, {\n                type: 'unsubscribedRead',\n                statusCode: 200,\n                procedureId: message.procedureId\n              });\n            case 15:\n              _context5.next = 20;\n              break;\n            case 17:\n              _context5.prev = 17;\n              _context5.t0 = _context5[\"catch\"](12);\n              logger.error('Failed to send message.', {\n                ex: _context5.t0\n              });\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[12, 17]]);\n    }));\n    function unsubscribe(_x3, _x4) {\n      return _unsubscribe.apply(this, arguments);\n    }\n    return unsubscribe;\n  }(),\n  removeAllListenersFor: function removeAllListenersFor(socket) {\n    if (!socket) {\n      throw new Error('Socket is missing.');\n    }\n    if (!subscriptions[socket.uniqueId]) {\n      return;\n    }\n    Object.keys(subscriptions[socket.uniqueId]).forEach(function (procedureId) {\n      var unsubscribe = subscriptions[socket.uniqueId][procedureId];\n      unsubscribe();\n    });\n  }\n};\nmodule.exports = postRead;","map":{"version":3,"names":["_interopRequireDefault","require","_regenerator","_asyncToGenerator2","sendMessage","validateQuery","subscriptions","postRead","subscribe","_subscribe","default","mark","_callee4","socket","_ref","app","message","readModel","logger","_message$payload","modelName","modelType","_message$payload$quer","query","_query$orderBy","orderBy","_query$skip","skip","_query$take","take","_query$where","where","authenticationWhere","stream","onData","onEnd","onError","unsubscribe","wrap","_callee4$","_context4","prev","next","Error","services","getLogger","payload","type","statusCode","procedureId","t0","error","ex","abrupt","t1","t2","t3","t4","exSendMessage","token","sub","push","$and","$or","api","read","user","id","sent","t5","t6","removeListener","end","uniqueId","data","_callee","_callee$","_context","stop","_callee2","_callee2$","_context2","err","_callee3","_callee3$","_context3","on","t7","_x","_x2","apply","arguments","_unsubscribe","_callee5","_ref5","_callee5$","_context5","_x3","_x4","removeAllListenersFor","Object","keys","forEach","module","exports"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/tailwind/dist/wires/api/http/v1/wsPostRead.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar sendMessage = require('./wsSendMessage'),\n    validateQuery = require('./validateQuery');\n\nvar subscriptions = {};\nvar postRead = {\n  subscribe: function () {\n    var _subscribe = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee4(socket, _ref) {\n      var app, message, readModel, logger, _message$payload, modelName, modelType, _message$payload$quer, query, _query$orderBy, orderBy, _query$skip, skip, _query$take, take, _query$where, where, authenticationWhere, stream, onData, onEnd, onError, unsubscribe;\n\n      return _regenerator.default.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              app = _ref.app, message = _ref.message, readModel = _ref.readModel;\n\n              if (socket) {\n                _context4.next = 3;\n                break;\n              }\n\n              throw new Error('Socket is missing.');\n\n            case 3:\n              if (app) {\n                _context4.next = 5;\n                break;\n              }\n\n              throw new Error('App is missing.');\n\n            case 5:\n              if (message) {\n                _context4.next = 7;\n                break;\n              }\n\n              throw new Error('Message is missing.');\n\n            case 7:\n              if (readModel) {\n                _context4.next = 9;\n                break;\n              }\n\n              throw new Error('Read model is missing.');\n\n            case 9:\n              logger = app.services.getLogger();\n\n              if (message.payload) {\n                _context4.next = 20;\n                break;\n              }\n\n              _context4.prev = 11;\n              _context4.next = 14;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Payload is missing.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n\n            case 14:\n              _context4.next = 19;\n              break;\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](11);\n              logger.error('Failed to send message.', {\n                ex: _context4.t0\n              });\n\n            case 19:\n              return _context4.abrupt(\"return\");\n\n            case 20:\n              _message$payload = message.payload, modelName = _message$payload.modelName, modelType = _message$payload.modelType, _message$payload$quer = _message$payload.query, query = _message$payload$quer === void 0 ? {} : _message$payload$quer;\n              _query$orderBy = query.orderBy, orderBy = _query$orderBy === void 0 ? {} : _query$orderBy;\n              _query$skip = query.skip, skip = _query$skip === void 0 ? 0 : _query$skip, _query$take = query.take, take = _query$take === void 0 ? 100 : _query$take, _query$where = query.where, where = _query$where === void 0 ? {} : _query$where;\n\n              if (typeof skip !== 'number') {\n                skip = 0;\n              }\n\n              if (typeof take !== 'number') {\n                take = 100;\n              }\n\n              if (readModel[modelType]) {\n                _context4.next = 35;\n                break;\n              }\n\n              _context4.prev = 26;\n              _context4.next = 29;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Unknown model type.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n\n            case 29:\n              _context4.next = 34;\n              break;\n\n            case 31:\n              _context4.prev = 31;\n              _context4.t1 = _context4[\"catch\"](26);\n              logger.error('Failed to send message.', {\n                ex: _context4.t1\n              });\n\n            case 34:\n              return _context4.abrupt(\"return\");\n\n            case 35:\n              if (readModel[modelType][modelName]) {\n                _context4.next = 45;\n                break;\n              }\n\n              _context4.prev = 36;\n              _context4.next = 39;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Unknown model name.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n\n            case 39:\n              _context4.next = 44;\n              break;\n\n            case 41:\n              _context4.prev = 41;\n              _context4.t2 = _context4[\"catch\"](36);\n              logger.error('Failed to send message.', {\n                ex: _context4.t2\n              });\n\n            case 44:\n              return _context4.abrupt(\"return\");\n\n            case 45:\n              _context4.prev = 45;\n              validateQuery({\n                orderBy: orderBy,\n                skip: skip,\n                take: take,\n                where: where\n              });\n              _context4.next = 60;\n              break;\n\n            case 49:\n              _context4.prev = 49;\n              _context4.t3 = _context4[\"catch\"](45);\n              _context4.prev = 51;\n              _context4.next = 54;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Invalid query.',\n                statusCode: 400,\n                procedureId: message.procedureId\n              });\n\n            case 54:\n              _context4.next = 59;\n              break;\n\n            case 56:\n              _context4.prev = 56;\n              _context4.t4 = _context4[\"catch\"](51);\n              logger.error('Failed to send message.', {\n                exSendMessage: _context4.t4\n              });\n\n            case 59:\n              return _context4.abrupt(\"return\");\n\n            case 60:\n              authenticationWhere = [{\n                'isAuthorized.owner': message.token.sub\n              }, {\n                'isAuthorized.forPublic': true\n              }];\n\n              if (message.token.sub !== 'anonymous') {\n                authenticationWhere.push({\n                  'isAuthorized.forAuthenticated': true\n                });\n              }\n\n              where = {\n                $and: [where, {\n                  $or: authenticationWhere\n                }]\n              };\n              _context4.prev = 63;\n              _context4.next = 66;\n              return app.api.read(modelType, modelName, {\n                where: where,\n                orderBy: orderBy,\n                take: take,\n                skip: skip,\n                user: {\n                  id: message.token.sub,\n                  token: message.token\n                }\n              });\n\n            case 66:\n              stream = _context4.sent;\n              _context4.next = 80;\n              break;\n\n            case 69:\n              _context4.prev = 69;\n              _context4.t5 = _context4[\"catch\"](63);\n              _context4.prev = 71;\n              _context4.next = 74;\n              return sendMessage(socket, {\n                type: 'error',\n                payload: 'Unable to load model.',\n                statusCode: 500,\n                procedureId: message.procedureId\n              });\n\n            case 74:\n              _context4.next = 79;\n              break;\n\n            case 76:\n              _context4.prev = 76;\n              _context4.t6 = _context4[\"catch\"](71);\n              logger.error('Failed to send message.', {\n                exSendMessage: _context4.t6\n              });\n\n            case 79:\n              return _context4.abrupt(\"return\");\n\n            case 80:\n              unsubscribe = function unsubscribe() {\n                stream.removeListener('data', onData);\n                stream.removeListener('end', onEnd);\n                stream.removeListener('error', onError);\n                stream.end();\n              };\n\n              subscriptions[socket.uniqueId] = subscriptions[socket.uniqueId] || {};\n              subscriptions[socket.uniqueId][message.procedureId] = unsubscribe;\n\n              onData = function onData(data) {\n                (0, _asyncToGenerator2.default)(\n                /*#__PURE__*/\n                _regenerator.default.mark(function _callee() {\n                  return _regenerator.default.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.prev = 0;\n                          _context.next = 3;\n                          return sendMessage(socket, {\n                            type: 'item',\n                            payload: data,\n                            statusCode: 200,\n                            procedureId: message.procedureId\n                          });\n\n                        case 3:\n                          _context.next = 8;\n                          break;\n\n                        case 5:\n                          _context.prev = 5;\n                          _context.t0 = _context[\"catch\"](0);\n                          logger.error('Failed to send message.', {\n                            ex: _context.t0\n                          });\n\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[0, 5]]);\n                }))();\n              };\n\n              onEnd = function onEnd() {\n                unsubscribe();\n                (0, _asyncToGenerator2.default)(\n                /*#__PURE__*/\n                _regenerator.default.mark(function _callee2() {\n                  return _regenerator.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.prev = 0;\n                          _context2.next = 3;\n                          return sendMessage(socket, {\n                            type: 'finish',\n                            statusCode: 200,\n                            procedureId: message.procedureId\n                          });\n\n                        case 3:\n                          _context2.next = 8;\n                          break;\n\n                        case 5:\n                          _context2.prev = 5;\n                          _context2.t0 = _context2[\"catch\"](0);\n                          logger.error('Failed to send message.', {\n                            ex: _context2.t0\n                          });\n\n                        case 8:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[0, 5]]);\n                }))();\n              };\n\n              onError = function onError(err) {\n                unsubscribe();\n                (0, _asyncToGenerator2.default)(\n                /*#__PURE__*/\n                _regenerator.default.mark(function _callee3() {\n                  return _regenerator.default.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.prev = 0;\n                          _context3.next = 3;\n                          return sendMessage(socket, {\n                            type: 'error',\n                            statusCode: 500,\n                            procedureId: message.procedureId,\n                            payload: err\n                          });\n\n                        case 3:\n                          _context3.next = 8;\n                          break;\n\n                        case 5:\n                          _context3.prev = 5;\n                          _context3.t0 = _context3[\"catch\"](0);\n                          logger.error('Failed to send message.', {\n                            ex: _context3.t0\n                          });\n\n                        case 8:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[0, 5]]);\n                }))();\n              };\n\n              stream.on('data', onData);\n              stream.on('end', onEnd);\n              stream.on('error', onError);\n              _context4.prev = 89;\n              _context4.next = 92;\n              return sendMessage(socket, {\n                type: 'subscribedRead',\n                statusCode: 200,\n                procedureId: message.procedureId\n              });\n\n            case 92:\n              _context4.next = 97;\n              break;\n\n            case 94:\n              _context4.prev = 94;\n              _context4.t7 = _context4[\"catch\"](89);\n              logger.error('Failed to send message.', {\n                ex: _context4.t7\n              });\n\n            case 97:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[11, 16], [26, 31], [36, 41], [45, 49], [51, 56], [63, 69], [71, 76], [89, 94]]);\n    }));\n\n    function subscribe(_x, _x2) {\n      return _subscribe.apply(this, arguments);\n    }\n\n    return subscribe;\n  }(),\n  unsubscribe: function () {\n    var _unsubscribe = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee5(socket, _ref5) {\n      var app, message, logger, unsubscribe;\n      return _regenerator.default.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              app = _ref5.app, message = _ref5.message;\n\n              if (socket) {\n                _context5.next = 3;\n                break;\n              }\n\n              throw new Error('Socket is missing.');\n\n            case 3:\n              if (app) {\n                _context5.next = 5;\n                break;\n              }\n\n              throw new Error('App is missing.');\n\n            case 5:\n              if (message) {\n                _context5.next = 7;\n                break;\n              }\n\n              throw new Error('Message is missing.');\n\n            case 7:\n              logger = app.services.getLogger();\n\n              if (!(!subscriptions[socket.uniqueId] || !subscriptions[socket.uniqueId][message.procedureId])) {\n                _context5.next = 10;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 10:\n              unsubscribe = subscriptions[socket.uniqueId][message.procedureId];\n              unsubscribe();\n              _context5.prev = 12;\n              _context5.next = 15;\n              return sendMessage(socket, {\n                type: 'unsubscribedRead',\n                statusCode: 200,\n                procedureId: message.procedureId\n              });\n\n            case 15:\n              _context5.next = 20;\n              break;\n\n            case 17:\n              _context5.prev = 17;\n              _context5.t0 = _context5[\"catch\"](12);\n              logger.error('Failed to send message.', {\n                ex: _context5.t0\n              });\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[12, 17]]);\n    }));\n\n    function unsubscribe(_x3, _x4) {\n      return _unsubscribe.apply(this, arguments);\n    }\n\n    return unsubscribe;\n  }(),\n  removeAllListenersFor: function removeAllListenersFor(socket) {\n    if (!socket) {\n      throw new Error('Socket is missing.');\n    }\n\n    if (!subscriptions[socket.uniqueId]) {\n      return;\n    }\n\n    Object.keys(subscriptions[socket.uniqueId]).forEach(function (procedureId) {\n      var unsubscribe = subscriptions[socket.uniqueId][procedureId];\n      unsubscribe();\n    });\n  }\n};\nmodule.exports = postRead;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}