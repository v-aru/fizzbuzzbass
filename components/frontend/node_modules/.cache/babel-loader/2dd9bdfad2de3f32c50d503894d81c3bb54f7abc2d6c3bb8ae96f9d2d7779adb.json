{"ast":null,"code":"'use strict';\n\nvar express = require('express'),\n  Limes = require('limes');\nvar getConfigurationJson = require('./getConfigurationJson'),\n  getPing = require('./getPing'),\n  postCommand = require('./postCommand'),\n  postEvents = require('./postEvents'),\n  postRead = require('./postRead');\nvar v1 = function v1(app, _ref) {\n  var readModel = _ref.readModel,\n    writeModel = _ref.writeModel;\n  var api = express();\n  var limes = new Limes({\n    identityProviders: app.identityProviders\n  });\n  var verifyTokenMiddleware = limes.verifyTokenMiddleware({\n    // According to RFC 2606, .invalid is a reserved TLD you can use in cases\n    // where you want to show that a domain is invalid. Since the tokens issued\n    // for anonymous users are made-up, https://token.invalid makes up a valid\n    // url, but we are sure that we do not run into any conflicts with the\n    // domain.\n    issuerForAnonymousTokens: 'https://token.invalid'\n  });\n  api.get('/ping', getPing());\n  api.get('/configuration.json', getConfigurationJson({\n    readModel: readModel,\n    writeModel: writeModel\n  }));\n  api.post('/command', verifyTokenMiddleware, postCommand(app, {\n    writeModel: writeModel\n  }));\n  api.post('/events', verifyTokenMiddleware, postEvents(app));\n  api.post('/read/:modelType/:modelName', verifyTokenMiddleware, postRead(app, {\n    readModel: readModel\n  }));\n  return api;\n};\nmodule.exports = v1;","map":{"version":3,"names":["express","require","Limes","getConfigurationJson","getPing","postCommand","postEvents","postRead","v1","app","_ref","readModel","writeModel","api","limes","identityProviders","verifyTokenMiddleware","issuerForAnonymousTokens","get","post","module","exports"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/tailwind/dist/wires/api/http/v1/index.js"],"sourcesContent":["'use strict';\n\nvar express = require('express'),\n    Limes = require('limes');\n\nvar getConfigurationJson = require('./getConfigurationJson'),\n    getPing = require('./getPing'),\n    postCommand = require('./postCommand'),\n    postEvents = require('./postEvents'),\n    postRead = require('./postRead');\n\nvar v1 = function v1(app, _ref) {\n  var readModel = _ref.readModel,\n      writeModel = _ref.writeModel;\n  var api = express();\n  var limes = new Limes({\n    identityProviders: app.identityProviders\n  });\n  var verifyTokenMiddleware = limes.verifyTokenMiddleware({\n    // According to RFC 2606, .invalid is a reserved TLD you can use in cases\n    // where you want to show that a domain is invalid. Since the tokens issued\n    // for anonymous users are made-up, https://token.invalid makes up a valid\n    // url, but we are sure that we do not run into any conflicts with the\n    // domain.\n    issuerForAnonymousTokens: 'https://token.invalid'\n  });\n  api.get('/ping', getPing());\n  api.get('/configuration.json', getConfigurationJson({\n    readModel: readModel,\n    writeModel: writeModel\n  }));\n  api.post('/command', verifyTokenMiddleware, postCommand(app, {\n    writeModel: writeModel\n  }));\n  api.post('/events', verifyTokenMiddleware, postEvents(app));\n  api.post('/read/:modelType/:modelName', verifyTokenMiddleware, postRead(app, {\n    readModel: readModel\n  }));\n  return api;\n};\n\nmodule.exports = v1;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;EAC5BC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAE5B,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,wBAAwB,CAAC;EACxDG,OAAO,GAAGH,OAAO,CAAC,WAAW,CAAC;EAC9BI,WAAW,GAAGJ,OAAO,CAAC,eAAe,CAAC;EACtCK,UAAU,GAAGL,OAAO,CAAC,cAAc,CAAC;EACpCM,QAAQ,GAAGN,OAAO,CAAC,YAAY,CAAC;AAEpC,IAAIO,EAAE,GAAG,SAASA,EAAEA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC9B,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAAS;IAC1BC,UAAU,GAAGF,IAAI,CAACE,UAAU;EAChC,IAAIC,GAAG,GAAGb,OAAO,CAAC,CAAC;EACnB,IAAIc,KAAK,GAAG,IAAIZ,KAAK,CAAC;IACpBa,iBAAiB,EAAEN,GAAG,CAACM;EACzB,CAAC,CAAC;EACF,IAAIC,qBAAqB,GAAGF,KAAK,CAACE,qBAAqB,CAAC;IACtD;IACA;IACA;IACA;IACA;IACAC,wBAAwB,EAAE;EAC5B,CAAC,CAAC;EACFJ,GAAG,CAACK,GAAG,CAAC,OAAO,EAAEd,OAAO,CAAC,CAAC,CAAC;EAC3BS,GAAG,CAACK,GAAG,CAAC,qBAAqB,EAAEf,oBAAoB,CAAC;IAClDQ,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA;EACd,CAAC,CAAC,CAAC;EACHC,GAAG,CAACM,IAAI,CAAC,UAAU,EAAEH,qBAAqB,EAAEX,WAAW,CAACI,GAAG,EAAE;IAC3DG,UAAU,EAAEA;EACd,CAAC,CAAC,CAAC;EACHC,GAAG,CAACM,IAAI,CAAC,SAAS,EAAEH,qBAAqB,EAAEV,UAAU,CAACG,GAAG,CAAC,CAAC;EAC3DI,GAAG,CAACM,IAAI,CAAC,6BAA6B,EAAEH,qBAAqB,EAAET,QAAQ,CAACE,GAAG,EAAE;IAC3EE,SAAS,EAAEA;EACb,CAAC,CAAC,CAAC;EACH,OAAOE,GAAG;AACZ,CAAC;AAEDO,MAAM,CAACC,OAAO,GAAGb,EAAE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}