{"ast":null,"code":"/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\n;\n!function (undefined) {\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    } else {\n      this._maxListeners = defaultMaxListeners;\n    }\n  }\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' + 'leak detected. ' + count + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.';\n    if (this.verboseMemoryLeak) {\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n    if (typeof process !== 'undefined' && process.emitWarning) {\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n      if (console.trace) {\n        console.trace();\n      }\n    }\n  }\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n    var listeners = [],\n      leaf,\n      len,\n      branch,\n      xTree,\n      xxTree,\n      isolatedBranch,\n      endReached,\n      typeLength = type.length,\n      currentType = type[i],\n      nextType = type[i + 1];\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n        return [tree];\n      }\n    }\n    if (currentType === '*' || currentType === '**' || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === '*';\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if (branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n        return listeners;\n      }\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n    }\n    xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1);\n    }\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        for (branch in xxTree) {\n          if (branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {\n                '**': isolatedBranch\n              }, i + 1);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n    return listeners;\n  }\n  function growListenerTree(type, listener) {\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    for (var i = 0, len = type.length; i + 1 < len; i++) {\n      if (type[i] === '**' && type[i + 1] === '**') {\n        return;\n      }\n    }\n    var tree = this.listenerTree;\n    var name = type.shift();\n    while (name !== undefined) {\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n      tree = tree[name];\n      if (type.length === 0) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n          tree._listeners.push(listener);\n          if (!tree._listeners.warned && this._maxListeners > 0 && tree._listeners.length > this._maxListeners) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n      name = type.shift();\n    }\n    return true;\n  }\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n  EventEmitter.prototype.setMaxListeners = function (n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n  EventEmitter.prototype.event = '';\n  EventEmitter.prototype.once = function (event, fn) {\n    return this._once(event, fn, false);\n  };\n  EventEmitter.prototype.prependOnceListener = function (event, fn) {\n    return this._once(event, fn, true);\n  };\n  EventEmitter.prototype._once = function (event, fn, prepend) {\n    this._many(event, 1, fn, prepend);\n    return this;\n  };\n  EventEmitter.prototype.many = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, false);\n  };\n  EventEmitter.prototype.prependMany = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, true);\n  };\n  EventEmitter.prototype._many = function (event, ttl, fn, prepend) {\n    var self = this;\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n    listener._origin = fn;\n    this._on(event, listener, prepend);\n    return self;\n  };\n  EventEmitter.prototype.emit = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n      if (al > 3) {\n        args = new Array(al);\n        for (j = 0; j < al; j++) args[j] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            handler[i].call(this, type);\n            break;\n          case 2:\n            handler[i].call(this, type, arguments[1]);\n            break;\n          case 3:\n            handler[i].call(this, type, arguments[1], arguments[2]);\n            break;\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n    }\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n          case 1:\n            handler.call(this);\n            break;\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n          default:\n            args = new Array(al - 1);\n            for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n            handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            handler[i].call(this);\n            break;\n          case 2:\n            handler[i].call(this, arguments[1]);\n            break;\n          case 3:\n            handler[i].call(this, arguments[1], arguments[2]);\n            break;\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n      return false;\n    }\n    return !!this._all;\n  };\n  EventEmitter.prototype.emitAsync = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return Promise.resolve([false]);\n      }\n    }\n    var promises = [];\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n    if (this._all) {\n      if (al > 3) {\n        args = new Array(al);\n        for (j = 1; j < al; j++) args[j] = arguments[j];\n      }\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            promises.push(this._all[i].call(this, type));\n            break;\n          case 2:\n            promises.push(this._all[i].call(this, type, arguments[1]));\n            break;\n          case 3:\n            promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n            break;\n          default:\n            promises.push(this._all[i].apply(this, args));\n        }\n      }\n    }\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n        case 1:\n          promises.push(handler.call(this));\n          break;\n        case 2:\n          promises.push(handler.call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler.call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n          case 1:\n            promises.push(handler[i].call(this));\n            break;\n          case 2:\n            promises.push(handler[i].call(this, arguments[1]));\n            break;\n          case 3:\n            promises.push(handler[i].call(this, arguments[1], arguments[2]));\n            break;\n          default:\n            promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n    return Promise.all(promises);\n  };\n  EventEmitter.prototype.on = function (type, listener) {\n    return this._on(type, listener, false);\n  };\n  EventEmitter.prototype.prependListener = function (type, listener) {\n    return this._on(type, listener, true);\n  };\n  EventEmitter.prototype.onAny = function (fn) {\n    return this._onAny(fn, false);\n  };\n  EventEmitter.prototype.prependAny = function (fn) {\n    return this._onAny(fn, true);\n  };\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n  EventEmitter.prototype._onAny = function (fn, prepend) {\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if (prepend) {\n      this._all.unshift(fn);\n    } else {\n      this._all.push(fn);\n    }\n    return this;\n  };\n  EventEmitter.prototype._on = function (type, listener, prepend) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) this.emit('newListener', type, listener);\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if (prepend) {\n        this._events[type].unshift(listener);\n      } else {\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (!this._events[type].warned && this._maxListeners > 0 && this._events[type].length > this._maxListeners) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n    return this;\n  };\n  EventEmitter.prototype.off = function (type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n    var handlers,\n      leafs = [];\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({\n        _listeners: handlers\n      });\n    }\n    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n        var position = -1;\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n            position = i;\n            break;\n          }\n        }\n        if (position < 0) {\n          continue;\n        }\n        if (this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        } else {\n          this._events[type].splice(position, 1);\n        }\n        if (handlers.length === 0) {\n          if (this.wildcard) {\n            delete leaf._listeners;\n          } else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener) this.emit(\"removeListener\", type, listener);\n        return this;\n      } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n        if (this.wildcard) {\n          delete leaf._listeners;\n        } else {\n          delete this._events[type];\n        }\n        if (this._removeListener) this.emit(\"removeListener\", type, listener);\n      }\n    }\n    function recursivelyGarbageCollect(root) {\n      if (root === undefined) {\n        return;\n      }\n      var keys = Object.keys(root);\n      for (var i in keys) {\n        var key = keys[i];\n        var obj = root[key];\n        if (obj instanceof Function || typeof obj !== \"object\" || obj === null) continue;\n        if (Object.keys(obj).length > 0) {\n          recursivelyGarbageCollect(root[key]);\n        }\n        if (Object.keys(obj).length === 0) {\n          delete root[key];\n        }\n      }\n    }\n    recursivelyGarbageCollect(this.listenerTree);\n    return this;\n  };\n  EventEmitter.prototype.offAny = function (fn) {\n    var i = 0,\n      l = 0,\n      fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for (i = 0, l = fns.length; i < l; i++) {\n        if (fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener) this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for (i = 0, l = fns.length; i < l; i++) this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n  EventEmitter.prototype.listeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n    this._events || init.call(this);\n    if (!this._events[type]) this._events[type] = [];\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n    return this._events[type];\n  };\n  EventEmitter.prototype.eventNames = function () {\n    return Object.keys(this._events);\n  };\n  EventEmitter.prototype.listenerCount = function (type) {\n    return this.listeners(type).length;\n  };\n  EventEmitter.prototype.listenersAny = function () {\n    if (this._all) {\n      return this._all;\n    } else {\n      return [];\n    }\n  };\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  } else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();","map":{"version":3,"names":["undefined","isArray","Array","_isArray","obj","Object","prototype","toString","call","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","_maxListeners","maxListeners","wildcard","newListener","_newListener","removeListener","_removeListener","verboseMemoryLeak","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","process","emitWarning","e","Error","name","emitter","console","error","trace","EventEmitter","EventEmitter2","searchListenerTree","handlers","type","tree","i","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","length","currentType","nextType","_listeners","push","hasOwnProperty","concat","growListenerTree","listener","split","slice","shift","warned","setMaxListeners","n","event","once","fn","_once","prependOnceListener","prepend","_many","many","ttl","prependMany","self","off","apply","arguments","_origin","_on","emit","al","args","l","j","handler","_all","ns","emitAsync","Promise","resolve","promises","reject","all","on","prependListener","onAny","_onAny","prependAny","addListener","unshift","leafs","iLeaf","position","splice","recursivelyGarbageCollect","root","keys","key","Function","offAny","fns","removeAllListeners","eventNames","listenerCount","listenersAny","define","amd","exports","module","window"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/eventemitter2/lib/eventemitter2.js"],"sourcesContent":["/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\n;!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this._newListener = conf.newListener);\r\n      conf.removeListener && (this._removeListener = conf.removeListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. ' + count + ' listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: ' + eventName + '.';\r\n    }\r\n\r\n    if(typeof process !== 'undefined' && process.emitWarning){\r\n      var e = new Error(errorMsg);\r\n      e.name = 'MaxListenersExceededWarning';\r\n      e.emitter = this;\r\n      e.count = count;\r\n      process.emitWarning(e);\r\n    } else {\r\n      console.error(errorMsg);\r\n\r\n      if (console.trace){\r\n        console.trace();\r\n      }\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this._newListener = false;\r\n    this._removeListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._maxListeners > 0 &&\r\n            tree._listeners.length > this._maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    return this._once(event, fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependOnceListener = function(event, fn) {\r\n    return this._once(event, fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype._once = function(event, fn, prepend) {\r\n    this._many(event, 1, fn, prepend);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, false);\r\n  }\r\n\r\n  EventEmitter.prototype.prependMany = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, true);\r\n  }\r\n\r\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this._on(event, listener, prepend);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    return this._on(type, listener, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependListener = function(type, listener) {\r\n    return this._on(type, listener, true);\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    return this._onAny(fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependAny = function(fn) {\r\n    return this._onAny(fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype._onAny = function(fn, prepend){\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    if(prepend){\r\n      this._all.unshift(fn);\r\n    }else{\r\n      this._all.push(fn);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype._on = function(type, listener, prepend) {\r\n    if (typeof type === 'function') {\r\n      this._onAny(type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    if (this._newListener)\r\n       this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just add\r\n      if(prepend){\r\n        this._events[type].unshift(listener);\r\n      }else{\r\n        this._events[type].push(listener);\r\n      }\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._maxListeners > 0 &&\r\n        this._events[type].length > this._maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          if (this._removeListener)\r\n            this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      if (this._removeListener) {\r\n        for(i = 0, l = fns.length; i < l; i++)\r\n          this.emit(\"removeListenerAny\", fns[i]);\r\n      }\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (type === undefined) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.eventNames = function(){\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n     // AMD. Register as an anonymous module.\r\n    define(function() {\r\n      return EventEmitter;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    // CommonJS\r\n    module.exports = EventEmitter;\r\n  }\r\n  else {\r\n    // Browser global.\r\n    window.EventEmitter2 = EventEmitter;\r\n  }\r\n}();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}