{"ast":null,"code":"'use strict';\n\n/**\n * Content Security Policy (CSP)\n * https://www.owasp.org/index.php/Content_Security_Policy\n * @param {Object} options The CSP policy.\n */\nmodule.exports = function (options) {\n  var policyRules = options && options.policy,\n    isReportOnly = options && options.reportOnly,\n    reportUri = options && options.reportUri,\n    styleNonce = options && options.styleNonce,\n    scriptNonce = options && options.scriptNonce,\n    value,\n    name;\n  name = 'content-security-policy';\n  if (isReportOnly) {\n    name += '-report-only';\n  }\n  if (policyRules && policyRules[\"default-src\"]) {\n    if (styleNonce && !policyRules[\"style-src\"]) {\n      policyRules[\"style-src\"] = policyRules[\"default-src\"];\n    }\n    if (scriptNonce && !policyRules[\"script-src\"]) {\n      policyRules[\"script-src\"] = policyRules[\"default-src\"];\n    }\n  }\n  value = createPolicyString(policyRules);\n  if (reportUri) {\n    if (value !== '') {\n      value += '; ';\n    }\n    value += 'report-uri ' + reportUri;\n  }\n  return function csp(req, res, next) {\n    if (styleNonce) {\n      var styleMatch = value.match(/style-src 'nonce-.{48}'/);\n      if (styleMatch) {\n        value = value.replace(styleMatch[0], 'style-src \\'nonce-' + res.locals.nonce + '\\'');\n      } else {\n        value = value.replace('style-src', 'style-src \\'nonce-' + res.locals.nonce + '\\'');\n      }\n    }\n    if (scriptNonce) {\n      var scriptMatch = value.match(/script-src 'nonce-.{48}'/);\n      if (scriptMatch) {\n        value = value.replace(scriptMatch[0], 'script-src \\'nonce-' + res.locals.nonce + '\\'');\n      } else {\n        value = value.replace('script-src', 'script-src \\'nonce-' + res.locals.nonce + '\\'');\n      }\n    }\n    res.header(name, value);\n    next();\n  };\n};\nvar createPolicyString = module.exports.createPolicyString = function (policy) {\n  var entries;\n  if (typeof policy === 'string') {\n    return policy;\n  }\n  if (Array.isArray(policy)) {\n    return policy.map(createPolicyString).join('; ');\n  }\n  if (typeof policy === 'object' && policy !== null) {\n    entries = Object.keys(policy).map(function (directive) {\n      if (policy[directive] === 0 || policy[directive]) {\n        directive += ' ' + policy[directive];\n      }\n      return directive;\n    });\n    return createPolicyString(entries);\n  }\n  throw Error('invalid csp policy - must be array, string, or plain object');\n};","map":{"version":3,"names":["module","exports","options","policyRules","policy","isReportOnly","reportOnly","reportUri","styleNonce","scriptNonce","value","name","createPolicyString","csp","req","res","next","styleMatch","match","replace","locals","nonce","scriptMatch","header","entries","Array","isArray","map","join","Object","keys","directive","Error"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/lusca/lib/csp.js"],"sourcesContent":["'use strict';\n\n/**\n * Content Security Policy (CSP)\n * https://www.owasp.org/index.php/Content_Security_Policy\n * @param {Object} options The CSP policy.\n */\nmodule.exports = function (options) {\n    var policyRules = options && options.policy,\n        isReportOnly = options && options.reportOnly,\n        reportUri = options && options.reportUri,\n        styleNonce = options && options.styleNonce,\n        scriptNonce = options && options.scriptNonce,\n        value, name;\n\n    name = 'content-security-policy';\n\n    if (isReportOnly) {\n        name += '-report-only';\n    }\n\n    if (policyRules && policyRules[\"default-src\"]) {\n        if (styleNonce && !policyRules[\"style-src\"]) {\n            policyRules[\"style-src\"] = policyRules[\"default-src\"];\n        }\n        \n        if (scriptNonce && !policyRules[\"script-src\"]) {\n            policyRules[\"script-src\"] = policyRules[\"default-src\"];\n        }\n    }\n\n    value = createPolicyString(policyRules);\n\n    if (reportUri) {\n        if (value !== '') {\n            value += '; ';\n        }\n        value += 'report-uri ' + reportUri;\n    }\n\n    return function csp(req, res, next) {\n        if (styleNonce) {\n            var styleMatch = value.match(/style-src 'nonce-.{48}'/);\n            if (styleMatch) {\n                value = value.replace(styleMatch[0], 'style-src \\'nonce-' + res.locals.nonce + '\\'');\n            }\n            else {\n                value = value.replace('style-src', 'style-src \\'nonce-' + res.locals.nonce + '\\'');\n            }\n        }\n        if (scriptNonce) {\n            var scriptMatch = value.match(/script-src 'nonce-.{48}'/);\n            if (scriptMatch) {\n                value = value.replace(scriptMatch[0], 'script-src \\'nonce-' + res.locals.nonce + '\\'');\n            }\n            else {\n                value = value.replace('script-src', 'script-src \\'nonce-' + res.locals.nonce + '\\'');\n            }\n        }\n        res.header(name, value);\n        next();\n    };\n};\n\nvar createPolicyString = module.exports.createPolicyString = function (policy) {\n    var entries;\n\n    if (typeof policy === 'string') {\n        return policy;\n    }\n\n    if (Array.isArray(policy)) {\n        return policy.map(createPolicyString).join('; ');\n    }\n\n    if (typeof policy === 'object' && policy !== null) {\n        entries = Object.keys(policy).map(function (directive) {\n            if (policy[directive] === 0 || policy[directive]) {\n                directive += ' ' + policy[directive];\n            }\n            return directive;\n        });\n\n        return createPolicyString(entries);\n    }\n\n    throw Error('invalid csp policy - must be array, string, or plain object');\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}