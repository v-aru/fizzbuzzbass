{"ast":null,"code":"'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nvar metaSchema = require('./refs/json-schema-draft-07.json');\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\nvar definitionSchema = {\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {\n      not: {\n        required: ['macro']\n      }\n    }\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {\n      type: 'boolean'\n    },\n    statements: {\n      type: 'boolean'\n    },\n    dependencies: {\n      type: 'array',\n      items: {\n        type: 'string'\n      }\n    },\n    metaSchema: {\n      type: 'object'\n    },\n    modifying: {\n      type: 'boolean'\n    },\n    valid: {\n      type: 'boolean'\n    },\n    $data: {\n      type: 'boolean'\n    },\n    async: {\n      type: 'boolean'\n    },\n    errors: {\n      anyOf: [{\n        type: 'boolean'\n      }, {\n        const: 'full'\n      }]\n    }\n  }\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword]) throw new Error('Keyword ' + keyword + ' is already defined');\n  if (!IDENTIFIER.test(keyword)) throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n  if (definition) {\n    this.validateKeyword(definition, true);\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i = 0; i < dataType.length; i++) _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [metaSchema, {\n            '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#'\n          }]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i = 0; i < RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n    if (!ruleGroup) {\n      ruleGroup = {\n        type: dataType,\n        rules: []\n      };\n      RULES.push(ruleGroup);\n    }\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n  return this;\n}\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i = 0; i < RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j = 0; j < rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword || this.compile(definitionSchema, true);\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError) throw new Error('custom keyword definition is invalid: ' + this.errorsText(v.errors));else return false;\n}","map":{"version":3,"names":["IDENTIFIER","customRuleCode","require","metaSchema","module","exports","add","addKeyword","get","getKeyword","remove","removeKeyword","validate","validateKeyword","definitionSchema","definitions","simpleTypes","type","dependencies","schema","$data","statements","valid","not","required","properties","items","modifying","async","errors","anyOf","const","keyword","definition","RULES","keywords","Error","test","dataType","Array","isArray","i","length","_addRule","_opts","validateSchema","compile","all","ruleGroup","rg","rules","push","rule","custom","code","implements","j","splice","throwError","v","_validateKeyword","errorsText"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/ajv/lib/keyword.js"],"sourcesContent":["'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nvar metaSchema = require('./refs/json-schema-draft-07.json');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\n\nvar definitionSchema = {\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    this.validateKeyword(definition, true);\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i=0; i<dataType.length; i++)\n        _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword\n                                  || this.compile(definitionSchema, true);\n\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError)\n    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));\n  else\n    return false;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}