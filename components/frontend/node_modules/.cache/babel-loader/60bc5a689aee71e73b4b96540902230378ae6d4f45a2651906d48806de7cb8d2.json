{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar os = require('os');\nvar StatsD = require('node-statsd');\nvar fakeStethoskop = {\n  noteValue: function noteValue() {}\n};\nvar lastCpuCheck = void 0,\n  lastCpuUsage = void 0;\nvar resetCpuCheck = function resetCpuCheck() {\n  lastCpuCheck = process.hrtime();\n  lastCpuUsage = process.cpuUsage();\n};\nvar getMicroseconds = function getMicroseconds(hrTime) {\n  return hrTime[0] * 1e9 + hrTime[1];\n};\nvar Stethoskop = function () {\n  function Stethoskop(options) {\n    _classCallCheck(this, Stethoskop);\n    var enabled = options.enabled,\n      from = options.from,\n      to = options.to;\n    var _to$host = to.host,\n      host = _to$host === undefined ? 'localhost' : _to$host,\n      _to$port = to.port,\n      port = _to$port === undefined ? 8125 : _to$port;\n    if (!enabled) {\n      return fakeStethoskop;\n    }\n    this.statsD = new StatsD({\n      host: host,\n      port: port,\n      prefix: from.application + '.' + os.hostname() + '.'\n    });\n    resetCpuCheck();\n    this.watchSystemUsage(60);\n  }\n  _createClass(Stethoskop, [{\n    key: 'watchSystemUsage',\n    value: function watchSystemUsage(seconds) {\n      var _this = this;\n      setInterval(function () {\n        _this.noteCpuUsage();\n        _this.noteMemoryUsage();\n      }, seconds * 1000);\n    }\n  }, {\n    key: 'noteCpuUsage',\n    value: function noteCpuUsage() {\n      var averageLoad = os.loadavg()[0],\n        cpuUsage = process.cpuUsage(lastCpuUsage),\n        interval = getMicroseconds(process.hrtime(lastCpuCheck)) / 1000;\n      resetCpuCheck();\n      this.noteValue('$cpu.load.average', averageLoad / os.cpus().length);\n      this.noteValue('$cpu.usage.system', cpuUsage.system / interval);\n      this.noteValue('$cpu.usage.user', cpuUsage.user / interval);\n    }\n  }, {\n    key: 'noteMemoryUsage',\n    value: function noteMemoryUsage() {\n      var memoryUsage = process.memoryUsage();\n      this.noteValue('$memory.rss', memoryUsage.rss);\n      this.noteValue('$memory.heap.used', memoryUsage.heapUsed);\n      this.noteValue('$memory.heap.total', memoryUsage.heapTotal);\n    }\n  }, {\n    key: 'noteValue',\n    value: function noteValue(key, value) {\n      this.statsD.gauge(key, value);\n    }\n  }]);\n  return Stethoskop;\n}();\nmodule.exports = Stethoskop;","map":{"version":3,"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","os","require","StatsD","fakeStethoskop","noteValue","lastCpuCheck","lastCpuUsage","resetCpuCheck","process","hrtime","cpuUsage","getMicroseconds","hrTime","Stethoskop","options","enabled","from","to","_to$host","host","undefined","_to$port","port","statsD","prefix","application","hostname","watchSystemUsage","value","seconds","_this","setInterval","noteCpuUsage","noteMemoryUsage","averageLoad","loadavg","interval","cpus","system","user","memoryUsage","rss","heapUsed","heapTotal","gauge","module","exports"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/stethoskop/dist/Stethoskop.js"],"sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar os = require('os');\n\nvar StatsD = require('node-statsd');\n\nvar fakeStethoskop = {\n  noteValue: function noteValue() {}\n};\n\nvar lastCpuCheck = void 0,\n    lastCpuUsage = void 0;\n\nvar resetCpuCheck = function resetCpuCheck() {\n  lastCpuCheck = process.hrtime();\n  lastCpuUsage = process.cpuUsage();\n};\n\nvar getMicroseconds = function getMicroseconds(hrTime) {\n  return hrTime[0] * 1e9 + hrTime[1];\n};\n\nvar Stethoskop = function () {\n  function Stethoskop(options) {\n    _classCallCheck(this, Stethoskop);\n\n    var enabled = options.enabled,\n        from = options.from,\n        to = options.to;\n    var _to$host = to.host,\n        host = _to$host === undefined ? 'localhost' : _to$host,\n        _to$port = to.port,\n        port = _to$port === undefined ? 8125 : _to$port;\n\n\n    if (!enabled) {\n      return fakeStethoskop;\n    }\n\n    this.statsD = new StatsD({\n      host: host,\n      port: port,\n      prefix: from.application + '.' + os.hostname() + '.'\n    });\n\n    resetCpuCheck();\n\n    this.watchSystemUsage(60);\n  }\n\n  _createClass(Stethoskop, [{\n    key: 'watchSystemUsage',\n    value: function watchSystemUsage(seconds) {\n      var _this = this;\n\n      setInterval(function () {\n        _this.noteCpuUsage();\n        _this.noteMemoryUsage();\n      }, seconds * 1000);\n    }\n  }, {\n    key: 'noteCpuUsage',\n    value: function noteCpuUsage() {\n      var averageLoad = os.loadavg()[0],\n          cpuUsage = process.cpuUsage(lastCpuUsage),\n          interval = getMicroseconds(process.hrtime(lastCpuCheck)) / 1000;\n\n      resetCpuCheck();\n\n      this.noteValue('$cpu.load.average', averageLoad / os.cpus().length);\n      this.noteValue('$cpu.usage.system', cpuUsage.system / interval);\n      this.noteValue('$cpu.usage.user', cpuUsage.user / interval);\n    }\n  }, {\n    key: 'noteMemoryUsage',\n    value: function noteMemoryUsage() {\n      var memoryUsage = process.memoryUsage();\n\n      this.noteValue('$memory.rss', memoryUsage.rss);\n      this.noteValue('$memory.heap.used', memoryUsage.heapUsed);\n      this.noteValue('$memory.heap.total', memoryUsage.heapTotal);\n    }\n  }, {\n    key: 'noteValue',\n    value: function noteValue(key, value) {\n      this.statsD.gauge(key, value);\n    }\n  }]);\n\n  return Stethoskop;\n}();\n\nmodule.exports = Stethoskop;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}