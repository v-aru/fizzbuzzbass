{"ast":null,"code":"'use strict';\n\nvar getReturnValue = require('../getReturnValue'),\n  throwOnUnknownProperties = require('../throwOnUnknownProperties');\nvar validator = function validator(options) {\n  options = options || {};\n  options.min = options.min || Number.NEGATIVE_INFINITY;\n  options.max = options.max || Number.POSITIVE_INFINITY;\n  options.isInteger = Boolean(options.isInteger);\n  throwOnUnknownProperties(options, ['min', 'max', 'isInteger', 'default']);\n  return function (value) {\n    var returnValue = getReturnValue(value, options);\n    if (typeof value !== 'number') {\n      return returnValue.false;\n    }\n    if (options.isInteger && Math.trunc(value) !== value) {\n      return returnValue.false;\n    }\n    if (value < options.min) {\n      return returnValue.false;\n    }\n    if (value > options.max) {\n      return returnValue.false;\n    }\n    return returnValue.true;\n  };\n};\nmodule.exports = validator;","map":{"version":3,"names":["getReturnValue","require","throwOnUnknownProperties","validator","options","min","Number","NEGATIVE_INFINITY","max","POSITIVE_INFINITY","isInteger","Boolean","value","returnValue","false","Math","trunc","true","module","exports"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/formats/dist/validators/number.js"],"sourcesContent":["'use strict';\n\nvar getReturnValue = require('../getReturnValue'),\n    throwOnUnknownProperties = require('../throwOnUnknownProperties');\n\nvar validator = function validator(options) {\n  options = options || {};\n  options.min = options.min || Number.NEGATIVE_INFINITY;\n  options.max = options.max || Number.POSITIVE_INFINITY;\n  options.isInteger = Boolean(options.isInteger);\n\n  throwOnUnknownProperties(options, ['min', 'max', 'isInteger', 'default']);\n\n  return function (value) {\n    var returnValue = getReturnValue(value, options);\n\n    if (typeof value !== 'number') {\n      return returnValue.false;\n    }\n\n    if (options.isInteger && Math.trunc(value) !== value) {\n      return returnValue.false;\n    }\n\n    if (value < options.min) {\n      return returnValue.false;\n    }\n\n    if (value > options.max) {\n      return returnValue.false;\n    }\n\n    return returnValue.true;\n  };\n};\n\nmodule.exports = validator;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;EAC7CC,wBAAwB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AAErE,IAAIE,SAAS,GAAG,SAASA,SAASA,CAACC,OAAO,EAAE;EAC1CA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvBA,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACC,GAAG,IAAIC,MAAM,CAACC,iBAAiB;EACrDH,OAAO,CAACI,GAAG,GAAGJ,OAAO,CAACI,GAAG,IAAIF,MAAM,CAACG,iBAAiB;EACrDL,OAAO,CAACM,SAAS,GAAGC,OAAO,CAACP,OAAO,CAACM,SAAS,CAAC;EAE9CR,wBAAwB,CAACE,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;EAEzE,OAAO,UAAUQ,KAAK,EAAE;IACtB,IAAIC,WAAW,GAAGb,cAAc,CAACY,KAAK,EAAER,OAAO,CAAC;IAEhD,IAAI,OAAOQ,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOC,WAAW,CAACC,KAAK;IAC1B;IAEA,IAAIV,OAAO,CAACM,SAAS,IAAIK,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,KAAKA,KAAK,EAAE;MACpD,OAAOC,WAAW,CAACC,KAAK;IAC1B;IAEA,IAAIF,KAAK,GAAGR,OAAO,CAACC,GAAG,EAAE;MACvB,OAAOQ,WAAW,CAACC,KAAK;IAC1B;IAEA,IAAIF,KAAK,GAAGR,OAAO,CAACI,GAAG,EAAE;MACvB,OAAOK,WAAW,CAACC,KAAK;IAC1B;IAEA,OAAOD,WAAW,CAACI,IAAI;EACzB,CAAC;AACH,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGhB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}