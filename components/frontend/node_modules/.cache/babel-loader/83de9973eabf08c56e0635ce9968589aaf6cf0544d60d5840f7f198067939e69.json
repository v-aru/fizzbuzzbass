{"ast":null,"code":"'use strict';\n\n// Implements Brad Hill's Double HMAC pattern from\n// https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/.\n// The approach is similar to the node's native implementation of timing safe buffer comparison that will be available on v6+.\n// https://github.com/nodejs/node/issues/3043\n// https://github.com/nodejs/node/pull/3073\nvar crypto = require('crypto');\nfunction bufferEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  // `crypto.timingSafeEqual` was introduced in Node v6.6.0\n  // <https://github.com/jshttp/basic-auth/issues/39>\n  if (crypto.timingSafeEqual) {\n    return crypto.timingSafeEqual(a, b);\n  }\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction timeSafeCompare(a, b) {\n  var sa = String(a);\n  var sb = String(b);\n  var key = crypto.pseudoRandomBytes(32);\n  var ah = crypto.createHmac('sha256', key).update(sa).digest();\n  var bh = crypto.createHmac('sha256', key).update(sb).digest();\n  return bufferEqual(ah, bh) && a === b;\n}\nmodule.exports = timeSafeCompare;","map":{"version":3,"names":["crypto","require","bufferEqual","a","b","length","timingSafeEqual","i","timeSafeCompare","sa","String","sb","key","pseudoRandomBytes","ah","createHmac","update","digest","bh","module","exports"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/tsscmp/lib/index.js"],"sourcesContent":["'use strict';\r\n\r\n// Implements Brad Hill's Double HMAC pattern from\r\n// https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/.\r\n// The approach is similar to the node's native implementation of timing safe buffer comparison that will be available on v6+.\r\n// https://github.com/nodejs/node/issues/3043\r\n// https://github.com/nodejs/node/pull/3073\r\n\r\nvar crypto = require('crypto');\r\n\r\nfunction bufferEqual(a, b) {\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n  // `crypto.timingSafeEqual` was introduced in Node v6.6.0\r\n  // <https://github.com/jshttp/basic-auth/issues/39>\r\n  if (crypto.timingSafeEqual) {\r\n    return crypto.timingSafeEqual(a, b);\r\n  }\r\n  for (var i = 0; i < a.length; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction timeSafeCompare(a, b) {\r\n  var sa = String(a);\r\n  var sb = String(b);\r\n  var key = crypto.pseudoRandomBytes(32);\r\n  var ah = crypto.createHmac('sha256', key).update(sa).digest();\r\n  var bh = crypto.createHmac('sha256', key).update(sb).digest();\r\n\r\n  return bufferEqual(ah, bh) && a === b;\r\n}\r\n\r\nmodule.exports = timeSafeCompare;\r\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE9B,SAASC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,IAAID,CAAC,CAACE,MAAM,KAAKD,CAAC,CAACC,MAAM,EAAE;IACzB,OAAO,KAAK;EACd;EACA;EACA;EACA,IAAIL,MAAM,CAACM,eAAe,EAAE;IAC1B,OAAON,MAAM,CAACM,eAAe,CAACH,CAAC,EAAEC,CAAC,CAAC;EACrC;EACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACE,MAAM,EAAEE,CAAC,EAAE,EAAE;IACjC,IAAIJ,CAAC,CAACI,CAAC,CAAC,KAAKH,CAAC,CAACG,CAAC,CAAC,EAAE;MACjB,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;AAEA,SAASC,eAAeA,CAACL,CAAC,EAAEC,CAAC,EAAE;EAC7B,IAAIK,EAAE,GAAGC,MAAM,CAACP,CAAC,CAAC;EAClB,IAAIQ,EAAE,GAAGD,MAAM,CAACN,CAAC,CAAC;EAClB,IAAIQ,GAAG,GAAGZ,MAAM,CAACa,iBAAiB,CAAC,EAAE,CAAC;EACtC,IAAIC,EAAE,GAAGd,MAAM,CAACe,UAAU,CAAC,QAAQ,EAAEH,GAAG,CAAC,CAACI,MAAM,CAACP,EAAE,CAAC,CAACQ,MAAM,CAAC,CAAC;EAC7D,IAAIC,EAAE,GAAGlB,MAAM,CAACe,UAAU,CAAC,QAAQ,EAAEH,GAAG,CAAC,CAACI,MAAM,CAACL,EAAE,CAAC,CAACM,MAAM,CAAC,CAAC;EAE7D,OAAOf,WAAW,CAACY,EAAE,EAAEI,EAAE,CAAC,IAAIf,CAAC,KAAKC,CAAC;AACvC;AAEAe,MAAM,CAACC,OAAO,GAAGZ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}