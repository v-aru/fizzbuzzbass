{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar os = require('os');\nvar cloneDeep = require('lodash/cloneDeep'),\n  forEach = require('lodash/forEach'),\n  forOwn = require('lodash/forOwn'),\n  includes = require('lodash/includes'),\n  keys = require('lodash/keys'),\n  varname = require('varname');\nvar defaultLevels = require('../defaultLevels.json'),\n  parseLogDebugModulesEnvironmentVariable = require('./parseLogDebugModulesEnvironmentVariable'),\n  parseLogLevelsEnvironmentVariable = require('./parseLogLevelsEnvironmentVariable');\nvar Configuration = /*#__PURE__*/\nfunction () {\n  function Configuration() {\n    (0, _classCallCheck2.default)(this, Configuration);\n    this.setLevels(cloneDeep(defaultLevels));\n    this.setHost(os.hostname());\n    this.debugModules = parseLogDebugModulesEnvironmentVariable();\n  }\n  (0, _createClass2.default)(Configuration, [{\n    key: \"set\",\n    value: function set(key, options) {\n      var fn = varname.camelback(\"set-\".concat(key));\n      if (!this[fn]) {\n        throw new Error(\"Unknown key '\".concat(key, \"' specified.\"));\n      }\n      this[fn](options);\n    }\n  }, {\n    key: \"setLevels\",\n    value: function setLevels(levels) {\n      var _this = this;\n      if (!levels) {\n        throw new Error('Levels are missing.');\n      }\n      this.levels = levels;\n      var enabledLogLevels = parseLogLevelsEnvironmentVariable();\n      if (enabledLogLevels.length === 0) {\n        return;\n      }\n      if (enabledLogLevels.length === 1 && enabledLogLevels[0] === '*') {\n        enabledLogLevels = keys(this.levels);\n      }\n      forEach(enabledLogLevels, function (enabledLogLevel) {\n        if (!includes(keys(_this.levels), enabledLogLevel)) {\n          throw new Error(\"Unknown log level \".concat(enabledLogLevel, \".\"));\n        }\n      });\n      forOwn(this.levels, function (levelOptions, levelName) {\n        levelOptions.enabled = includes(enabledLogLevels, levelName);\n      });\n    }\n  }, {\n    key: \"setHost\",\n    value: function setHost(host) {\n      if (!host) {\n        throw new Error('Host is missing.');\n      }\n      this.host = host;\n    }\n  }]);\n  return Configuration;\n}();\nmodule.exports = Configuration;","map":{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","os","cloneDeep","forEach","forOwn","includes","keys","varname","defaultLevels","parseLogDebugModulesEnvironmentVariable","parseLogLevelsEnvironmentVariable","Configuration","default","setLevels","setHost","hostname","debugModules","key","value","set","options","fn","camelback","concat","Error","levels","_this","enabledLogLevels","length","enabledLogLevel","levelOptions","levelName","enabled","host","module","exports"],"sources":["/Users/anandarunima/Documents/Arunima/Coursework/sauce_labs-fizzbuzzbash/fizzbuzzbass/components/node_modules/flaschenpost/dist/Configuration/index.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar os = require('os');\n\nvar cloneDeep = require('lodash/cloneDeep'),\n    forEach = require('lodash/forEach'),\n    forOwn = require('lodash/forOwn'),\n    includes = require('lodash/includes'),\n    keys = require('lodash/keys'),\n    varname = require('varname');\n\nvar defaultLevels = require('../defaultLevels.json'),\n    parseLogDebugModulesEnvironmentVariable = require('./parseLogDebugModulesEnvironmentVariable'),\n    parseLogLevelsEnvironmentVariable = require('./parseLogLevelsEnvironmentVariable');\n\nvar Configuration =\n/*#__PURE__*/\nfunction () {\n  function Configuration() {\n    (0, _classCallCheck2.default)(this, Configuration);\n    this.setLevels(cloneDeep(defaultLevels));\n    this.setHost(os.hostname());\n    this.debugModules = parseLogDebugModulesEnvironmentVariable();\n  }\n\n  (0, _createClass2.default)(Configuration, [{\n    key: \"set\",\n    value: function set(key, options) {\n      var fn = varname.camelback(\"set-\".concat(key));\n\n      if (!this[fn]) {\n        throw new Error(\"Unknown key '\".concat(key, \"' specified.\"));\n      }\n\n      this[fn](options);\n    }\n  }, {\n    key: \"setLevels\",\n    value: function setLevels(levels) {\n      var _this = this;\n\n      if (!levels) {\n        throw new Error('Levels are missing.');\n      }\n\n      this.levels = levels;\n      var enabledLogLevels = parseLogLevelsEnvironmentVariable();\n\n      if (enabledLogLevels.length === 0) {\n        return;\n      }\n\n      if (enabledLogLevels.length === 1 && enabledLogLevels[0] === '*') {\n        enabledLogLevels = keys(this.levels);\n      }\n\n      forEach(enabledLogLevels, function (enabledLogLevel) {\n        if (!includes(keys(_this.levels), enabledLogLevel)) {\n          throw new Error(\"Unknown log level \".concat(enabledLogLevel, \".\"));\n        }\n      });\n      forOwn(this.levels, function (levelOptions, levelName) {\n        levelOptions.enabled = includes(enabledLogLevels, levelName);\n      });\n    }\n  }, {\n    key: \"setHost\",\n    value: function setHost(host) {\n      if (!host) {\n        throw new Error('Host is missing.');\n      }\n\n      this.host = host;\n    }\n  }]);\n  return Configuration;\n}();\n\nmodule.exports = Configuration;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpF,IAAIC,gBAAgB,GAAGF,sBAAsB,CAACC,OAAO,CAAC,uCAAuC,CAAC,CAAC;AAE/F,IAAIE,aAAa,GAAGH,sBAAsB,CAACC,OAAO,CAAC,oCAAoC,CAAC,CAAC;AAEzF,IAAIG,EAAE,GAAGH,OAAO,CAAC,IAAI,CAAC;AAEtB,IAAII,SAAS,GAAGJ,OAAO,CAAC,kBAAkB,CAAC;EACvCK,OAAO,GAAGL,OAAO,CAAC,gBAAgB,CAAC;EACnCM,MAAM,GAAGN,OAAO,CAAC,eAAe,CAAC;EACjCO,QAAQ,GAAGP,OAAO,CAAC,iBAAiB,CAAC;EACrCQ,IAAI,GAAGR,OAAO,CAAC,aAAa,CAAC;EAC7BS,OAAO,GAAGT,OAAO,CAAC,SAAS,CAAC;AAEhC,IAAIU,aAAa,GAAGV,OAAO,CAAC,uBAAuB,CAAC;EAChDW,uCAAuC,GAAGX,OAAO,CAAC,2CAA2C,CAAC;EAC9FY,iCAAiC,GAAGZ,OAAO,CAAC,qCAAqC,CAAC;AAEtF,IAAIa,aAAa,GACjB;AACA,YAAY;EACV,SAASA,aAAaA,CAAA,EAAG;IACvB,CAAC,CAAC,EAAEZ,gBAAgB,CAACa,OAAO,EAAE,IAAI,EAAED,aAAa,CAAC;IAClD,IAAI,CAACE,SAAS,CAACX,SAAS,CAACM,aAAa,CAAC,CAAC;IACxC,IAAI,CAACM,OAAO,CAACb,EAAE,CAACc,QAAQ,CAAC,CAAC,CAAC;IAC3B,IAAI,CAACC,YAAY,GAAGP,uCAAuC,CAAC,CAAC;EAC/D;EAEA,CAAC,CAAC,EAAET,aAAa,CAACY,OAAO,EAAED,aAAa,EAAE,CAAC;IACzCM,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,SAASC,GAAGA,CAACF,GAAG,EAAEG,OAAO,EAAE;MAChC,IAAIC,EAAE,GAAGd,OAAO,CAACe,SAAS,CAAC,MAAM,CAACC,MAAM,CAACN,GAAG,CAAC,CAAC;MAE9C,IAAI,CAAC,IAAI,CAACI,EAAE,CAAC,EAAE;QACb,MAAM,IAAIG,KAAK,CAAC,eAAe,CAACD,MAAM,CAACN,GAAG,EAAE,cAAc,CAAC,CAAC;MAC9D;MAEA,IAAI,CAACI,EAAE,CAAC,CAACD,OAAO,CAAC;IACnB;EACF,CAAC,EAAE;IACDH,GAAG,EAAE,WAAW;IAChBC,KAAK,EAAE,SAASL,SAASA,CAACY,MAAM,EAAE;MAChC,IAAIC,KAAK,GAAG,IAAI;MAEhB,IAAI,CAACD,MAAM,EAAE;QACX,MAAM,IAAID,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,IAAI,CAACC,MAAM,GAAGA,MAAM;MACpB,IAAIE,gBAAgB,GAAGjB,iCAAiC,CAAC,CAAC;MAE1D,IAAIiB,gBAAgB,CAACC,MAAM,KAAK,CAAC,EAAE;QACjC;MACF;MAEA,IAAID,gBAAgB,CAACC,MAAM,KAAK,CAAC,IAAID,gBAAgB,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAChEA,gBAAgB,GAAGrB,IAAI,CAAC,IAAI,CAACmB,MAAM,CAAC;MACtC;MAEAtB,OAAO,CAACwB,gBAAgB,EAAE,UAAUE,eAAe,EAAE;QACnD,IAAI,CAACxB,QAAQ,CAACC,IAAI,CAACoB,KAAK,CAACD,MAAM,CAAC,EAAEI,eAAe,CAAC,EAAE;UAClD,MAAM,IAAIL,KAAK,CAAC,oBAAoB,CAACD,MAAM,CAACM,eAAe,EAAE,GAAG,CAAC,CAAC;QACpE;MACF,CAAC,CAAC;MACFzB,MAAM,CAAC,IAAI,CAACqB,MAAM,EAAE,UAAUK,YAAY,EAAEC,SAAS,EAAE;QACrDD,YAAY,CAACE,OAAO,GAAG3B,QAAQ,CAACsB,gBAAgB,EAAEI,SAAS,CAAC;MAC9D,CAAC,CAAC;IACJ;EACF,CAAC,EAAE;IACDd,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAASJ,OAAOA,CAACmB,IAAI,EAAE;MAC5B,IAAI,CAACA,IAAI,EAAE;QACT,MAAM,IAAIT,KAAK,CAAC,kBAAkB,CAAC;MACrC;MAEA,IAAI,CAACS,IAAI,GAAGA,IAAI;IAClB;EACF,CAAC,CAAC,CAAC;EACH,OAAOtB,aAAa;AACtB,CAAC,CAAC,CAAC;AAEHuB,MAAM,CAACC,OAAO,GAAGxB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}